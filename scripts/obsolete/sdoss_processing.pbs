#!/bin/sh
### sdoss_hfc_processing
#PBS -N sdoss_hfc_processing
#PBS -M xavier.bonnin@obspm.fr
#PBS -m bae
#PBS -e /obs/helio/hfc/frc/sdoss/logs/sdoss_hfc_processing.e$PBS_JOBID
#PBS -o /obs/helio/hfc/frc/sdoss/logs/sdoss_hfc_processing.o$PBS_JOBID
#PBS -l nodes=1:ppn=4,walltime=500:00:00,mem=5gb

#INFO ABOUT SDOSS SUBMISSION
#-------------------------------
#Here is an example of sdoss job submission:
#using the following input options:
#  nodes=1:ppn=4,walltime=48:00:00,mem=3gb
#  starttime=2011-02-13T00:00:00
#  endtime=2011-02-14T00:00:00
#  cadence=3600
#  nproc=3
#Output message:
#Exec host:  quadri15/6+quadri15/5+quadri15/4+quadri15/3
#Execution terminated
#Exit_status=0
#resources_used.cput=10:08:36
#resources_used.mem=15587652kb
#resources_used.vmem=19236036kb
#resources_used.walltime=02:34:46
#------------------------------


##Set paths
SRC_DIR=/obs/helio/hfc/frc/sdoss 
WORK_DIR=/travail/helio/hfc/frc/sdoss
PRODUCT_DIR=/data/helio/hfc/frc/sdoss
DATA_DIR=/poubelle/helio/hfc/frc/sdoss
SDOSS_BIN=$SRC_DIR/lib/idl/bin/sdoss_hfc_processing.sav

##Append extra python modules' path to $PYTHONPATH
PYTHONPATH=$PYTHONPATH:$SRC_DIR/lib/python/hfc
export PYTHONPATH

##SSW environment variable required
SSW_ONTOLOGY=/obs/helio/library/idl/ssw/vobs/ontology
export SSW_ONTOLOGY

##Set output log file
JOBID=`echo $PBS_JOBID | cut -d"." -f1`
LOGFILE=$SRC_DIR/scripts/sdoss_hfc_processing.l$JOBID

#Input arguments
NPROC=2
STARTTIME=2013-07-01T00:00:00
ENDTIME=2013-09-08T23:59:59
CADENCE=7200
HISTORY_FILE=$PRODUCT_DIR/sdoss_hfc_processing.history

echo Job Name is $PBS_JOBNAME
echo Job ID is $JOBID
echo Working directory is $PBS_O_WORKDIR
echo Ressources requested are:
echo "nodes=1:ppn=4,walltime=500:00:00,mem=5gb"
echo "This job run on the following node(s) :" 
echo `cat $PBS_NODEFILE`

SCRIPT=$SRC_DIR/lib/python/hfc/sdoss_hfc_processing.py
ARGS="-p "$NPROC" -s "$STARTTIME" -e "$ENDTIME" -c "$CADENCE" -h "$HISTORY_FILE" -d "$DATA_DIR" -o "$PRODUCT_DIR" -b "$SDOSS_BIN
OPTS="-V -R -Q"

echo "Running "$SCRIPT"..."
time python $SCRIPT $OPTS $ARGS
echo "Running "$SCRIPT"...done"



